// Autogenerated from Pigeon (v11.0.1), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, InitializationResult) {
  InitializationResultSuccess = 0,
  InitializationResultFailInvalidApiKey = 1,
  InitializationResultFailConnectionError = 2,
  InitializationResultFailInternalError = 3,
};

/// Wrapper for InitializationResult to allow for nullability.
@interface InitializationResultBox : NSObject
@property(nonatomic, assign) InitializationResult value;
- (instancetype)initWithValue:(InitializationResult)value;
@end

typedef NS_ENUM(NSUInteger, OperatingMode) {
  OperatingModePositioning = 0,
  OperatingModeMeasure = 1,
  OperatingModeSystemOverloaded = 2,
};

/// Wrapper for OperatingMode to allow for nullability.
@interface OperatingModeBox : NSObject
@property(nonatomic, assign) OperatingMode value;
- (instancetype)initWithValue:(OperatingMode)value;
@end

typedef NS_ENUM(NSUInteger, PrecisionMode) {
  PrecisionModeStrict = 0,
  PrecisionModeRelaxed = 1,
};

/// Wrapper for PrecisionMode to allow for nullability.
@interface PrecisionModeBox : NSObject
@property(nonatomic, assign) PrecisionMode value;
- (instancetype)initWithValue:(PrecisionMode)value;
@end

typedef NS_ENUM(NSUInteger, MeasurementPreset) {
  MeasurementPresetOneMinuteHrHrvBr = 0,
  MeasurementPresetOneMinuteBetaMetrics = 1,
  MeasurementPresetInfiniteHr = 2,
  MeasurementPresetInfiniteMetrics = 3,
  MeasurementPresetFourtyFiveSecondsUnvalidated = 4,
  MeasurementPresetThirtySecondsUnvalidated = 5,
};

/// Wrapper for MeasurementPreset to allow for nullability.
@interface MeasurementPresetBox : NSObject
@property(nonatomic, assign) MeasurementPreset value;
- (instancetype)initWithValue:(MeasurementPreset)value;
@end

typedef NS_ENUM(NSUInteger, CameraMode) {
  CameraModeOff = 0,
  CameraModeFacingUser = 1,
  CameraModeFacingEnvironment = 2,
};

/// Wrapper for CameraMode to allow for nullability.
@interface CameraModeBox : NSObject
@property(nonatomic, assign) CameraMode value;
- (instancetype)initWithValue:(CameraMode)value;
@end

typedef NS_ENUM(NSUInteger, OnboardingMode) {
  OnboardingModeHidden = 0,
  OnboardingModeShowOnce = 1,
  OnboardingModeShowAlways = 2,
};

/// Wrapper for OnboardingMode to allow for nullability.
@interface OnboardingModeBox : NSObject
@property(nonatomic, assign) OnboardingMode value;
- (instancetype)initWithValue:(OnboardingMode)value;
@end

typedef NS_ENUM(NSUInteger, FaceState) {
  FaceStateOk = 0,
  FaceStateTooFar = 1,
  FaceStateTooClose = 2,
  FaceStateNotCentered = 3,
  FaceStateNotVisible = 4,
  FaceStateUnknown = 5,
};

/// Wrapper for FaceState to allow for nullability.
@interface FaceStateBox : NSObject
@property(nonatomic, assign) FaceState value;
- (instancetype)initWithValue:(FaceState)value;
@end

typedef NS_ENUM(NSUInteger, MeasurementState) {
  MeasurementStateNotStarted = 0,
  MeasurementStateWaitingForFace = 1,
  MeasurementStateRunningSignalShort = 2,
  MeasurementStateRunningSignalGood = 3,
  MeasurementStateRunningSignalBad = 4,
  MeasurementStateRunningSignalBadDeviceUnstable = 5,
  MeasurementStateFinished = 6,
  MeasurementStateFailed = 7,
};

/// Wrapper for MeasurementState to allow for nullability.
@interface MeasurementStateBox : NSObject
@property(nonatomic, assign) MeasurementState value;
- (instancetype)initWithValue:(MeasurementState)value;
@end

typedef NS_ENUM(NSUInteger, Gender) {
  GenderMale = 0,
  GenderFemale = 1,
  GenderOther = 2,
};

/// Wrapper for Gender to allow for nullability.
@interface GenderBox : NSObject
@property(nonatomic, assign) Gender value;
- (instancetype)initWithValue:(Gender)value;
@end

typedef NS_ENUM(NSUInteger, Race) {
  RaceWhite = 0,
  RaceAfricanAmerican = 1,
  RaceOther = 2,
};

/// Wrapper for Race to allow for nullability.
@interface RaceBox : NSObject
@property(nonatomic, assign) Race value;
- (instancetype)initWithValue:(Race)value;
@end

@class InitializeResponse;
@class OperatingModeResponse;
@class PrecisionModeResponse;
@class MeasurementPresetResponse;
@class CameraModeResponse;
@class FaceStateResponse;
@class NormalizedFaceBbox;
@class MeasurementStateResponse;
@class Heartbeat;
@class MeasurementResults;
@class InitializationSettings;
@class CustomMeasurementConfig;
@class CustomColorTheme;
@class RisksFactors;
@class HardAndFatalEventsRisks;
@class CVDiseasesRisks;
@class RisksFactorsScores;
@class HealthRisks;

@interface InitializeResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithResult:(InitializationResult)result;
@property(nonatomic, assign) InitializationResult result;
@end

@interface OperatingModeResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithMode:(OperatingMode)mode;
@property(nonatomic, assign) OperatingMode mode;
@end

@interface PrecisionModeResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithMode:(PrecisionMode)mode;
@property(nonatomic, assign) PrecisionMode mode;
@end

@interface MeasurementPresetResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPreset:(MeasurementPreset)preset;
@property(nonatomic, assign) MeasurementPreset preset;
@end

@interface CameraModeResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithMode:(CameraMode)mode;
@property(nonatomic, assign) CameraMode mode;
@end

@interface FaceStateResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithState:(FaceState)state;
@property(nonatomic, assign) FaceState state;
@end

@interface NormalizedFaceBbox : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithX:(NSNumber *)x y:(NSNumber *)y width:(NSNumber *)width height:(NSNumber *)height;
@property(nonatomic, strong) NSNumber *x;
@property(nonatomic, strong) NSNumber *y;
@property(nonatomic, strong) NSNumber *width;
@property(nonatomic, strong) NSNumber *height;
@end

@interface MeasurementStateResponse : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithState:(MeasurementState)state;
@property(nonatomic, assign) MeasurementState state;
@end

@interface Heartbeat : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithStart_location_sec:(NSNumber *)start_location_sec
                          end_location_sec:(NSNumber *)end_location_sec
                               duration_ms:(NSNumber *)duration_ms;
@property(nonatomic, strong) NSNumber *start_location_sec;
@property(nonatomic, strong) NSNumber *end_location_sec;
@property(nonatomic, strong) NSNumber *duration_ms;
@end

@interface MeasurementResults : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithHeart_rate_bpm:(NSNumber *)heart_rate_bpm
                           hrv_sdnn_ms:(nullable NSNumber *)hrv_sdnn_ms
                        hrv_lnrmssd_ms:(nullable NSNumber *)hrv_lnrmssd_ms
                          stress_index:(nullable NSNumber *)stress_index
                    breathing_rate_bpm:(nullable NSNumber *)breathing_rate_bpm
          systolic_blood_pressure_mmhg:(nullable NSNumber *)systolic_blood_pressure_mmhg
         diastolic_blood_pressure_mmhg:(nullable NSNumber *)diastolic_blood_pressure_mmhg
                            heartbeats:(NSArray<Heartbeat *> *)heartbeats
                average_signal_quality:(NSNumber *)average_signal_quality;
@property(nonatomic, strong) NSNumber *heart_rate_bpm;
@property(nonatomic, strong, nullable) NSNumber *hrv_sdnn_ms;
@property(nonatomic, strong, nullable) NSNumber *hrv_lnrmssd_ms;
@property(nonatomic, strong, nullable) NSNumber *stress_index;
@property(nonatomic, strong, nullable) NSNumber *breathing_rate_bpm;
@property(nonatomic, strong, nullable) NSNumber *systolic_blood_pressure_mmhg;
@property(nonatomic, strong, nullable) NSNumber *diastolic_blood_pressure_mmhg;
@property(nonatomic, strong) NSArray<Heartbeat *> *heartbeats;
@property(nonatomic, strong) NSNumber *average_signal_quality;
@end

@interface InitializationSettings : NSObject
+ (instancetype)makeWithPrecisionMode:(nullable PrecisionModeBox *)precisionMode
                        operatingMode:(nullable OperatingModeBox *)operatingMode
                    measurementPreset:(nullable MeasurementPresetBox *)measurementPreset
                           cameraMode:(nullable CameraModeBox *)cameraMode
                       onboardingMode:(nullable OnboardingModeBox *)onboardingMode
                    showUserInterface:(nullable NSNumber *)showUserInterface
           showFacePositioningOverlay:(nullable NSNumber *)showFacePositioningOverlay
                   showVisualWarnings:(nullable NSNumber *)showVisualWarnings
                     enableCameraSwap:(nullable NSNumber *)enableCameraSwap
                         showFaceMask:(nullable NSNumber *)showFaceMask
                        showBloodFlow:(nullable NSNumber *)showBloodFlow
                       proVersionLock:(nullable NSNumber *)proVersionLock
                       hideShenaiLogo:(nullable NSNumber *)hideShenaiLogo;
@property(nonatomic, strong, nullable) PrecisionModeBox *precisionMode;
@property(nonatomic, strong, nullable) OperatingModeBox *operatingMode;
@property(nonatomic, strong, nullable) MeasurementPresetBox *measurementPreset;
@property(nonatomic, strong, nullable) CameraModeBox *cameraMode;
@property(nonatomic, strong, nullable) OnboardingModeBox *onboardingMode;
@property(nonatomic, strong, nullable) NSNumber *showUserInterface;
@property(nonatomic, strong, nullable) NSNumber *showFacePositioningOverlay;
@property(nonatomic, strong, nullable) NSNumber *showVisualWarnings;
@property(nonatomic, strong, nullable) NSNumber *enableCameraSwap;
@property(nonatomic, strong, nullable) NSNumber *showFaceMask;
@property(nonatomic, strong, nullable) NSNumber *showBloodFlow;
@property(nonatomic, strong, nullable) NSNumber *proVersionLock;
@property(nonatomic, strong, nullable) NSNumber *hideShenaiLogo;
@end

@interface CustomMeasurementConfig : NSObject
+ (instancetype)makeWithDurationSeconds:(nullable NSNumber *)durationSeconds
                    infiniteMeasurement:(nullable NSNumber *)infiniteMeasurement
                          showHeartRate:(nullable NSNumber *)showHeartRate
                            showHrvSdnn:(nullable NSNumber *)showHrvSdnn
                      showBreathingRate:(nullable NSNumber *)showBreathingRate
              showSystolicBloodPressure:(nullable NSNumber *)showSystolicBloodPressure
             showDiastolicBloodPressure:(nullable NSNumber *)showDiastolicBloodPressure
                      showCardiacStress:(nullable NSNumber *)showCardiacStress
                realtimeHrPeriodSeconds:(nullable NSNumber *)realtimeHrPeriodSeconds
               realtimeHrvPeriodSeconds:(nullable NSNumber *)realtimeHrvPeriodSeconds
     realtimeCardiacStressPeriodSeconds:(nullable NSNumber *)realtimeCardiacStressPeriodSeconds;
@property(nonatomic, strong, nullable) NSNumber *durationSeconds;
@property(nonatomic, strong, nullable) NSNumber *infiniteMeasurement;
@property(nonatomic, strong, nullable) NSNumber *showHeartRate;
@property(nonatomic, strong, nullable) NSNumber *showHrvSdnn;
@property(nonatomic, strong, nullable) NSNumber *showBreathingRate;
@property(nonatomic, strong, nullable) NSNumber *showSystolicBloodPressure;
@property(nonatomic, strong, nullable) NSNumber *showDiastolicBloodPressure;
@property(nonatomic, strong, nullable) NSNumber *showCardiacStress;
@property(nonatomic, strong, nullable) NSNumber *realtimeHrPeriodSeconds;
@property(nonatomic, strong, nullable) NSNumber *realtimeHrvPeriodSeconds;
@property(nonatomic, strong, nullable) NSNumber *realtimeCardiacStressPeriodSeconds;
@end

@interface CustomColorTheme : NSObject
+ (instancetype)makeWithThemeColor:(nullable NSString *)themeColor
                         textColor:(nullable NSString *)textColor
                   backgroundColor:(nullable NSString *)backgroundColor
                         tileColor:(nullable NSString *)tileColor;
@property(nonatomic, copy, nullable) NSString *themeColor;
@property(nonatomic, copy, nullable) NSString *textColor;
@property(nonatomic, copy, nullable) NSString *backgroundColor;
@property(nonatomic, copy, nullable) NSString *tileColor;
@end

@interface RisksFactors : NSObject
+ (instancetype)makeWithAge:(nullable NSNumber *)age
                cholesterol:(nullable NSNumber *)cholesterol
             cholesterolHdl:(nullable NSNumber *)cholesterolHdl
                        sbp:(nullable NSNumber *)sbp
                   isSmoker:(nullable NSNumber *)isSmoker
      hypertensionTreatment:(nullable NSNumber *)hypertensionTreatment
                hasDiabetes:(nullable NSNumber *)hasDiabetes
                 bodyHeight:(nullable NSNumber *)bodyHeight
                 bodyWeight:(nullable NSNumber *)bodyWeight
                     gender:(nullable GenderBox *)gender
                    country:(nullable NSString *)country
                       race:(nullable RaceBox *)race;
@property(nonatomic, strong, nullable) NSNumber *age;
@property(nonatomic, strong, nullable) NSNumber *cholesterol;
@property(nonatomic, strong, nullable) NSNumber *cholesterolHdl;
@property(nonatomic, strong, nullable) NSNumber *sbp;
@property(nonatomic, strong, nullable) NSNumber *isSmoker;
@property(nonatomic, strong, nullable) NSNumber *hypertensionTreatment;
@property(nonatomic, strong, nullable) NSNumber *hasDiabetes;
@property(nonatomic, strong, nullable) NSNumber *bodyHeight;
@property(nonatomic, strong, nullable) NSNumber *bodyWeight;
@property(nonatomic, strong, nullable) GenderBox *gender;
@property(nonatomic, copy, nullable) NSString *country;
@property(nonatomic, strong, nullable) RaceBox *race;
@end

@interface HardAndFatalEventsRisks : NSObject
+ (instancetype)makeWithCoronaryDeathEventRisk:(nullable NSNumber *)coronaryDeathEventRisk
                          fatalStrokeEventRisk:(nullable NSNumber *)fatalStrokeEventRisk
                          totalCVMortalityRisk:(nullable NSNumber *)totalCVMortalityRisk
                               hardCVEventRisk:(nullable NSNumber *)hardCVEventRisk;
@property(nonatomic, strong, nullable) NSNumber *coronaryDeathEventRisk;
@property(nonatomic, strong, nullable) NSNumber *fatalStrokeEventRisk;
@property(nonatomic, strong, nullable) NSNumber *totalCVMortalityRisk;
@property(nonatomic, strong, nullable) NSNumber *hardCVEventRisk;
@end

@interface CVDiseasesRisks : NSObject
+ (instancetype)makeWithOverallRisk:(nullable NSNumber *)overallRisk
           coronaryHeartDiseaseRisk:(nullable NSNumber *)coronaryHeartDiseaseRisk
                         strokeRisk:(nullable NSNumber *)strokeRisk
                   heartFailureRisk:(nullable NSNumber *)heartFailureRisk
      peripheralVascularDiseaseRisk:(nullable NSNumber *)peripheralVascularDiseaseRisk;
@property(nonatomic, strong, nullable) NSNumber *overallRisk;
@property(nonatomic, strong, nullable) NSNumber *coronaryHeartDiseaseRisk;
@property(nonatomic, strong, nullable) NSNumber *strokeRisk;
@property(nonatomic, strong, nullable) NSNumber *heartFailureRisk;
@property(nonatomic, strong, nullable) NSNumber *peripheralVascularDiseaseRisk;
@end

@interface RisksFactorsScores : NSObject
+ (instancetype)makeWithAgeScore:(nullable NSNumber *)ageScore
                        sbpScore:(nullable NSNumber *)sbpScore
                    smokingScore:(nullable NSNumber *)smokingScore
                   diabetesScore:(nullable NSNumber *)diabetesScore
                        bmiScore:(nullable NSNumber *)bmiScore
                cholesterolScore:(nullable NSNumber *)cholesterolScore
             cholesterolHdlScore:(nullable NSNumber *)cholesterolHdlScore
                      totalScore:(nullable NSNumber *)totalScore;
@property(nonatomic, strong, nullable) NSNumber *ageScore;
@property(nonatomic, strong, nullable) NSNumber *sbpScore;
@property(nonatomic, strong, nullable) NSNumber *smokingScore;
@property(nonatomic, strong, nullable) NSNumber *diabetesScore;
@property(nonatomic, strong, nullable) NSNumber *bmiScore;
@property(nonatomic, strong, nullable) NSNumber *cholesterolScore;
@property(nonatomic, strong, nullable) NSNumber *cholesterolHdlScore;
@property(nonatomic, strong, nullable) NSNumber *totalScore;
@end

@interface HealthRisks : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithHardAndFatalEvents:(HardAndFatalEventsRisks *)hardAndFatalEvents
                                cvDiseases:(CVDiseasesRisks *)cvDiseases
                               vascularAge:(nullable NSNumber *)vascularAge
                                    scores:(RisksFactorsScores *)scores;
@property(nonatomic, strong) HardAndFatalEventsRisks *hardAndFatalEvents;
@property(nonatomic, strong) CVDiseasesRisks *cvDiseases;
@property(nonatomic, strong, nullable) NSNumber *vascularAge;
@property(nonatomic, strong) RisksFactorsScores *scores;
@end

/// The codec used by ShenaiSdkNativeApi.
NSObject<FlutterMessageCodec> *ShenaiSdkNativeApiGetCodec(void);

@protocol ShenaiSdkNativeApi
/// @return `nil` only when `error != nil`.
- (nullable InitializeResponse *)initializeApiKey:(NSString *)apiKey
                                           userId:(NSString *)userId
                                         settings:(nullable InitializationSettings *)settings
                                            error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)isInitializedWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)deinitializeWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)setOperatingModeMode:(OperatingMode)mode error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable OperatingModeResponse *)getOperatingModeWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setPrecisionModeMode:(PrecisionMode)mode error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable PrecisionModeResponse *)getPrecisionModeWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setMeasurementPresetPreset:(MeasurementPreset)preset error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable MeasurementPresetResponse *)getMeasurementPresetWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setCustomMeasurementConfigConfig:(CustomMeasurementConfig *)config
                                   error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setCustomColorThemeTheme:(CustomColorTheme *)theme error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setCameraModeMode:(CameraMode)mode error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable CameraModeResponse *)getCameraModeWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setShowUserInterfaceShow:(NSNumber *)show error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getShowUserInterfaceWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setShowFacePositioningOverlayShow:(NSNumber *)show error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getShowFacePositioningOverlayWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setShowVisualWarningsShow:(NSNumber *)show error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getShowVisualWarningsWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setEnableCameraSwapEnable:(NSNumber *)enable error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getEnableCameraSwapWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setShowFaceMaskShow:(NSNumber *)show error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getShowFaceMaskWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setShowBloodFlowShow:(NSNumber *)show error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getShowBloodFlowWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setEnableStartAfterSuccessEnable:(NSNumber *)enable error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getEnableStartAfterSuccessWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FaceStateResponse *)getFaceStateWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NormalizedFaceBbox *)getNormalizedFaceBboxWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable MeasurementStateResponse *)getMeasurementStateWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getMeasurementProgressPercentageWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getHeartRate10sWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getHeartRate4sWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable MeasurementResults *)getRealtimeMetricsPeriod_sec:(NSNumber *)period_sec
                                                        error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable MeasurementResults *)getMeasurementResultsWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setRecordingEnabledEnabled:(NSNumber *)enabled error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getRecordingEnabledWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getTotalBadSignalSecondsWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)getCurrentSignalQualityMetricWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable FlutterStandardTypedData *)getSignalQualityMapPngWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable FlutterStandardTypedData *)getFaceTexturePngWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable FlutterStandardTypedData *)getFullPpgSignalWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSString *)getTraceIDWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setLanguageLanguage:(NSString *)language error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable HealthRisks *)computeHealthRisksHealthRisksFactors:(RisksFactors *)healthRisksFactors
                                                         error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable HealthRisks *)getMinimalHealthRisksHealthRisksFactors:(RisksFactors *)healthRisksFactors
                                                            error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable HealthRisks *)getMaximalHealthRisksHealthRisksFactors:(RisksFactors *)healthRisksFactors
                                                            error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void ShenaiSdkNativeApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                    NSObject<ShenaiSdkNativeApi> *_Nullable api);

NS_ASSUME_NONNULL_END
